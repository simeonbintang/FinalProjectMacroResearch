if (input$wy == "All") {
data.sel
}
else{
data.sel[data.sel$year == input$wy,]
}
})
output$table <- renderTable({
data()
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
fluidRow(
column(width = 12,
align = "center",
tags$h1("Research Report: Effects of Monetary Policy During Covid-19"),
tags$hr())
),
fluidRow(
column(width = 12,
align = "center",
tags$em(tags$h1("An Overview from Indonesia and the US")))
),
fluidRow(
column(width = 12,
align = "center",
radioButtons(inputId = "dp",
label = "Choose Dependend Variable Plot",
choices = c("Global Uncertainty Plot", "Inflation Plot", "Production Growth", "Credit"),
inline = T),
plotlyOutput("varplot")
)),
fluidRow(
titlePanel("Table Explorer"),
sidebarLayout(
sidebarPanel(
selectizeInput(
"show_vars",
"Columns to show:",
choices = colnames(all_df_plots),
multiple = TRUE,
selected = c("year", "month", "prod_index_ind")
),
actionButton("button", "Click to Confirm"),
uiOutput("date")
),
mainPanel(tableOutput("table"))
)
),
fluidRow(
column(width = 12,
align = "center",
selectInput(inputId = "sa",
label = "Choose Sentiment Type",
choices = c("NRC", "BING", "Afinn")),
plotOutput("sent", height = "700px"))
)
server <- function(input, output, session) {
output$varplot <- renderPlotly({
if (input$dp == "Global Uncertainty Plot") {plot_uncertainty}
else if (input$dp == "Inflation Plot") {plot_inflation}
else if (input$dp == "Production Growth") {plot_prod}
else if (input$dp == "Credit") {plot_credit}
else (return(NULL))
})
data.react <- eventReactive(input$button, {
all_df_plots[, input$show_vars]
})
observeEvent(input$button, {
output$date <- renderUI({
data.sel <- data.react()
selectizeInput("wy",
"Choose Year",
choices = c("All", sort(as.character(
unique(data.sel$year)
))),
selected = "All")
})
df_subset <- reactive(input$wy, {
data.sel <- data.react()
if (input$wy == "All") {
data.sel
}
else{
data.sel[data.sel$year == input$wy,]
}
})
output$table <- renderTable({
df_subset()
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
fluidRow(
column(width = 12,
align = "center",
tags$h1("Research Report: Effects of Monetary Policy During Covid-19"),
tags$hr())
),
fluidRow(
column(width = 12,
align = "center",
tags$em(tags$h1("An Overview from Indonesia and the US")))
),
fluidRow(
column(width = 12,
align = "center",
radioButtons(inputId = "dp",
label = "Choose Dependend Variable Plot",
choices = c("Global Uncertainty Plot", "Inflation Plot", "Production Growth", "Credit"),
inline = T),
plotlyOutput("varplot")
)),
fluidRow(
titlePanel("Table Explorer"),
sidebarLayout(
sidebarPanel(
selectizeInput(
"show_vars",
"Columns to show:",
choices = colnames(all_df_plots),
multiple = TRUE,
selected = c("year", "month", "prod_index_ind")
),
actionButton("button", "Click to Confirm"),
uiOutput("date")
),
mainPanel(tableOutput("table"))
)
),
fluidRow(
column(width = 12,
align = "center",
selectInput(inputId = "sa",
label = "Choose Sentiment Type",
choices = c("NRC", "BING", "Afinn")),
plotOutput("sent", height = "700px"))
)
server <- function(input, output, session) {
output$varplot <- renderPlotly({
if (input$dp == "Global Uncertainty Plot") {plot_uncertainty}
else if (input$dp == "Inflation Plot") {plot_inflation}
else if (input$dp == "Production Growth") {plot_prod}
else if (input$dp == "Credit") {plot_credit}
else (return(NULL))
})
data.react <- eventReactive(input$button, {
all_df_plots[, input$show_vars]
})
observeEvent(input$button, {
output$date <- renderUI({
data.sel <- data.react()
selectizeInput("wy",
"Choose Year",
choices = c("All", sort(as.character(
unique(data.sel$year)
))),
selected = "All")
})
df_subset <- reactive(input$wy, {
data.sel <- data.react()
if (input$wy == "All") {
data.sel
}
else{
data.sel[data.sel$year == input$wy,]
}
})
output$table <- renderTable({
df_subset()
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
fluidRow(
column(width = 12,
align = "center",
tags$h1("Research Report: Effects of Monetary Policy During Covid-19"),
tags$hr())
),
fluidRow(
column(width = 12,
align = "center",
tags$em(tags$h1("An Overview from Indonesia and the US")))
),
fluidRow(
column(width = 12,
align = "center",
radioButtons(inputId = "dp",
label = "Choose Dependend Variable Plot",
choices = c("Global Uncertainty Plot", "Inflation Plot", "Production Growth", "Credit"),
inline = T),
plotlyOutput("varplot")
)),
fluidRow(
titlePanel("Table Explorer"),
sidebarLayout(
sidebarPanel(
selectizeInput(
"show_vars",
"Columns to show:",
choices = colnames(all_df_plots),
multiple = TRUE,
selected = c("year", "month", "prod_index_ind")
),
actionButton("button", "Click to Confirm"),
uiOutput("date")
),
mainPanel(tableOutput("table"))
)
),
fluidRow(
column(width = 12,
align = "center",
selectInput(inputId = "sa",
label = "Choose Sentiment Type",
choices = c("NRC", "BING", "Afinn")),
plotOutput("sent", height = "700px"))
)
server <- function(input, output, session) {
output$varplot <- renderPlotly({
if (input$dp == "Global Uncertainty Plot") {plot_uncertainty}
else if (input$dp == "Inflation Plot") {plot_inflation}
else if (input$dp == "Production Growth") {plot_prod}
else if (input$dp == "Credit") {plot_credit}
else (return(NULL))
})
data.react <- eventReactive(input$button, {
all_df_plots[, input$show_vars]
})
observeEvent(input$button, {
output$date <- renderUI({
data.sel <- data.react()
selectizeInput("wy",
"Choose Year",
choices = c("All", sort(as.character(
unique(data.sel$year)
))),
selected = "All")
})
df_subset <- reactive(input$wy, {
data.sel <- data.react()
if (input$wy == "All") {
data.sel
}
else{
data.sel[data.sel$year == input$wy,]
}
})
output$table <- renderTable({
df_subset()
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
fluidRow(
column(width = 12,
align = "center",
tags$h1("Research Report: Effects of Monetary Policy During Covid-19"),
tags$hr())
),
fluidRow(
column(width = 12,
align = "center",
tags$em(tags$h1("An Overview from Indonesia and the US")))
),
fluidRow(
column(width = 12,
align = "center",
radioButtons(inputId = "dp",
label = "Choose Dependend Variable Plot",
choices = c("Global Uncertainty Plot", "Inflation Plot", "Production Growth", "Credit"),
inline = T),
plotlyOutput("varplot")
)),
fluidRow(
titlePanel("Table Explorer"),
sidebarLayout(
sidebarPanel(
selectizeInput(
"show_vars",
"Columns to show:",
choices = colnames(all_df_plots),
multiple = TRUE,
selected = c("year", "month", "prod_index_ind")
),
actionButton("button", "Click to Confirm"),
uiOutput("date")
),
mainPanel(tableOutput("table"))
)
),
fluidRow(
column(width = 12,
align = "center",
selectInput(inputId = "sa",
label = "Choose Sentiment Type",
choices = c("NRC", "BING", "Afinn")),
plotOutput("sent", height = "700px"))
)
server <- function(input, output, session) {
output$varplot <- renderPlotly({
if (input$dp == "Global Uncertainty Plot") {plot_uncertainty}
else if (input$dp == "Inflation Plot") {plot_inflation}
else if (input$dp == "Production Growth") {plot_prod}
else if (input$dp == "Credit") {plot_credit}
else (return(NULL))
})
data.react <- eventReactive(input$button, {
all_df_plots[, input$show_vars]
})
observeEvent(input$button, {
output$date <- renderUI({
data.sel <- data.react()
selectizeInput("wy",
"Choose Year",
choices = c("All", sort(as.character(
unique(data.sel$year)
))),
selected = "All")
})
df_subset <- eventReactive(input$wy, {
data.sel <- data.react()
if (input$wy == "All") {
data.sel
}
else{
data.sel[data.sel$year == input$wy,]
}
})
output$table <- renderTable({
df_subset()
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
fluidRow(
column(width = 12,
align = "center",
tags$h1("Research Report: Effects of Monetary Policy During Covid-19"),
tags$hr())
),
fluidRow(
column(width = 12,
align = "center",
tags$em(tags$h1("An Overview from Indonesia and the US")))
),
fluidRow(
column(width = 12,
align = "center",
radioButtons(inputId = "dp",
label = "Choose Dependend Variable Plot",
choices = c("Global Uncertainty Plot", "Inflation Plot", "Production Growth", "Credit"),
inline = T),
plotlyOutput("varplot")
)),
fluidRow(
titlePanel("Table Explorer"),
sidebarLayout(
sidebarPanel(
selectizeInput(
"show_vars",
"Columns to show:",
choices = colnames(all_df_plots),
multiple = TRUE,
selected = c("year", "month", "prod_index_ind")
),
actionButton("button", "Click to Confirm"),
uiOutput("date")
),
mainPanel(tableOutput("table"))
)
),
fluidRow(
column(width = 12,
align = "center",
selectInput(inputId = "sa",
label = "Choose Sentiment Type",
choices = c("NRC US", "BING US", "Afinn US")),
plotlyOutput("sent", height = "700px"))
)
server <- function(input, output, session) {
output$varplot <- renderPlotly({
if (input$dp == "Global Uncertainty Plot") {plot_uncertainty}
else if (input$dp == "Inflation Plot") {plot_inflation}
else if (input$dp == "Production Growth") {plot_prod}
else if (input$dp == "Credit") {plot_credit}
else (return(NULL))
})
data.react <- eventReactive(input$button, {
all_df_plots[, input$show_vars]
})
observeEvent(input$button, {
output$date <- renderUI({
data.sel <- data.react()
selectizeInput("wy",
"Choose Year",
choices = c("All", sort(as.character(
unique(data.sel$year)
))),
selected = "All")
})
df_subset <- eventReactive(input$wy, {
data.sel <- data.react()
if (input$wy == "All") {
data.sel
}
else{
data.sel[data.sel$year == input$wy,]
}
})
output$table <- renderTable({
df_subset()
})
#source: https://stackoverflow.com/questions/47657110/selection-of-columns-for-the-table-in-shiny
output$sent <- renderPlotly({
if (input$sa == "NRC US") {NRC_US_News}
else if (input$sa == "BING US") {BING_US_News}
else if (input$sa == "Afinn US") {Affin_US_News}
else (return(NULL))
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
fluidRow(
column(width = 12,
align = "center",
tags$h1("Research Report: Effects of Monetary Policy During Covid-19"),
tags$hr())
),
fluidRow(
column(width = 12,
align = "center",
tags$em(tags$h1("An Overview from Indonesia and the US")))
),
fluidRow(
column(width = 12,
align = "center",
radioButtons(inputId = "dp",
label = "Choose Dependend Variable Plot",
choices = c("Global Uncertainty Plot", "Inflation Plot", "Production Growth", "Credit"),
inline = T),
plotlyOutput("varplot")
)),
fluidRow(
titlePanel("Explore Our Data Table"),
sidebarLayout(
sidebarPanel(
selectizeInput(
"show_vars",
"Columns to show:",
choices = colnames(all_df_plots),
multiple = TRUE,
selected = c("year", "month", "prod_index_ind")
),
actionButton("button", "Click to Confirm"),
uiOutput("date")
),
mainPanel(tableOutput("table"))
)
),
fluidRow(
column(width = 12,
align = "center",
selectInput(inputId = "sa",
label = "Choose Sentiment Type",
choices = c("NRC US", "BING US", "Afinn US")),
plotlyOutput("sent", height = "700px"))
)
server <- function(input, output, session) {
output$varplot <- renderPlotly({
if (input$dp == "Global Uncertainty Plot") {plot_uncertainty}
else if (input$dp == "Inflation Plot") {plot_inflation}
else if (input$dp == "Production Growth") {plot_prod}
else if (input$dp == "Credit") {plot_credit}
else (return(NULL))
})
data.react <- eventReactive(input$button, {
all_df_plots[, input$show_vars]
})
observeEvent(input$button, {
output$date <- renderUI({
data.sel <- data.react()
selectizeInput("wy",
"Choose Year",
choices = c("All", sort(as.character(
unique(data.sel$year)
))),
selected = "All")
})
df_subset <- eventReactive(input$wy, {
data.sel <- data.react()
if (input$wy == "All") {
data.sel
}
else{
data.sel[data.sel$year == input$wy,]
}
})
output$table <- renderTable({
df_subset()
})
#source: https://stackoverflow.com/questions/47657110/selection-of-columns-for-the-table-in-shiny
output$sent <- renderPlotly({
if (input$sa == "NRC US") {NRC_US_News}
else if (input$sa == "BING US") {BING_US_News}
else if (input$sa == "Afinn US") {Affin_US_News}
else (return(NULL))
})
}
shinyApp(ui = ui, server = server)
